<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<util:properties id="conf" location="classpath:configure.properties"/>
	<util:properties id="jdbc" location="classpath:jdbc.properties"/>

	<!-- HikariCP -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="minimumIdle"     		value="5" /> 
		<property name="maximumPoolSize" 		value="20" /> 
		<property name="dataSourceClassName"	value="#{jdbc['jdbc.driver']}"/>
		<property name="connectionTestQuery" 	value="select 1" />
		<property name="connectionTimeout"  	value="200000" />
		<property name="dataSourceProperties">
			<props>
				<prop key="url">#{jdbc['jdbc.url']}</prop>
				<prop key="user">#{jdbc['jdbc.user']}</prop>
				<prop key="password">#{jdbc['jdbc.pwd']}</prop>
			</props>
		</property>
	</bean>
   <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
       <constructor-arg ref="hikariConfig"/>
   </bean>

	<!--  transaction -->	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*"    	read-only="true" />
			<tx:method name="find*"   	read-only="true" />
			<tx:method name="select*" 	read-only="true" />
			<tx:method name="post*"   	read-only="false" />
			<tx:method name="generate*"	propagation="REQUIRES_NEW"/>
			<tx:method name="excute*"   propagation="REQUIRES_NEW"/>
			<tx:method name="load*"   	propagation="REQUIRES_NEW"/>
			<tx:method name="*"       	propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="snsModelServicePointCut" expression="execution(* org.uengine.sns.*.*.service.*Service.*(..))" />
		<aop:advisor pointcut-ref="snsModelServicePointCut" advice-ref="txAdvice" />
	</aop:config>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="org.uengine.sns" />
		<property name="mapperLocations" value="classpath*:META-INF/mapper/#{conf['db.product']}/**/*.xml" />
		<property name="configurationProperties">
			<props>
				<prop key="defaultTablePrefix">#{conf['default.table.prefix']}</prop>
			</props>
		</property>
	</bean>

	<!-- mybatis mapper auto scanning -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.uengine.sns.*" />
	</bean>

	<!-- password encrypt -->
	<bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<constructor-arg name="strength" value="256"></constructor-arg>
	</bean>

	<!-- i18n support -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="defaultEncoding" 		value="UTF-8" />
		<property name="cacheSeconds" 			value="300"/>
		<property name="basename" 				value="classpath:META-INF/message/message" />
		<property name="fallbackToSystemLocale"	value="false"/>
	</bean>
	
	<context:component-scan base-package="org.uengine.sns" />
	
</beans>